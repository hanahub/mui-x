{
  "componentDescription": "",
  "propDescriptions": {
    "children": {
      "description": "The content of the component.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "classes": {
      "description": "Override or extend the styles applied to the component.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "className": {
      "description": "className applied to the root element.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "collapseIcon": {
      "description": "The icon used to collapse the node.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "ContentComponent": {
      "description": "The component used for the content node.",
      "requiresRef": true,
      "deprecated": "",
      "typeDescriptions": {}
    },
    "ContentProps": {
      "description": "Props applied to ContentComponent.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "disabled": {
      "description": "If <code>true</code>, the node is disabled.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "endIcon": {
      "description": "The icon displayed next to an end node.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "expandIcon": {
      "description": "The icon used to expand the node.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "icon": {
      "description": "The icon to display next to the tree node&#39;s label.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "label": { "description": "The tree node label.", "deprecated": "", "typeDescriptions": {} },
    "nodeId": { "description": "The id of the node.", "deprecated": "", "typeDescriptions": {} },
    "onFocus": {
      "description": "This prop isn&#39;t supported. Use the <code>onNodeFocus</code> callback on the tree if you need to monitor a node&#39;s focus.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "TransitionComponent": {
      "description": "The component used for the transition. <a href=\"/material-ui/transitions/#transitioncomponent-prop\">Follow this guide</a> to learn more about the requirements for this component.",
      "deprecated": "",
      "typeDescriptions": {}
    },
    "TransitionProps": {
      "description": "Props applied to the transition element. By default, the element is based on this <a href=\"http://reactcommunity.org/react-transition-group/transition/\"><code>Transition</code></a> component.",
      "deprecated": "",
      "typeDescriptions": {}
    }
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "group": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the transition component"
    },
    "content": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the content element"
    },
    "expanded": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "expanded"
    },
    "selected": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "selected"
    },
    "focused": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "focused"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the element",
      "conditions": "disabled"
    },
    "iconContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the tree node icon"
    },
    "label": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the label element" }
  },
  "slotDescriptions": {}
}
