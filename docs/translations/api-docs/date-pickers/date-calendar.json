{
  "componentDescription": "",
  "propDescriptions": {
    "autoFocus": "If <code>true</code>, the main element is focused during the first mount. This main element is: - the element chosen by the visible view if any (i.e: the selected day on the <code>day</code> view). - the <code>input</code> element if there is a field rendered.",
    "components": "Overridable components.",
    "componentsProps": "The props used for each component slot.",
    "dayOfWeekFormatter": "Formats the day of week displayed in the calendar header.<br><br><strong>Signature:</strong><br><code>function(day: string) =&gt; string</code><br><em>day:</em> The day of week provided by the adapter&#39;s method <code>getWeekdays</code>.<br> <em>returns</em> (string): The name to display.",
    "defaultCalendarMonth": "Default calendar month displayed when <code>value={null}</code>.",
    "defaultValue": "The default selected value. Used when the component is not controlled.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableFuture": "If <code>true</code>, disable values after the current date for date components, time for time components and both for date time components.",
    "disableHighlightToday": "If <code>true</code>, today&#39;s date is rendering without highlighting with circle.",
    "disablePast": "If <code>true</code>, disable values before the current date for date components, time for time components and both for date time components.",
    "displayWeekNumber": "If <code>true</code>, the week number will be display in the calendar.",
    "fixedWeekNumber": "Calendar will show more weeks in order to match this value. Put it to 6 for having fix number of week in Gregorian calendars",
    "focusedView": "Controlled focused view.",
    "loading": "If <code>true</code>, calls <code>renderLoading</code> instead of rendering the day calendar. Can be used to preload information and show it in calendar.",
    "maxDate": "Maximal selectable date.",
    "minDate": "Minimal selectable date.",
    "monthsPerRow": "Months rendered per row.",
    "onChange": "Callback fired when the value changes.<br><br><strong>Signature:</strong><br><code>function(value: TDate | null, selectionState: PickerSelectionState | undefined) =&gt; void</code><br><em>value:</em> The new value.<br><em>selectionState:</em> Indicates if the date selection is complete.",
    "onFocusedViewChange": "Callback fired on focused view change.<br><br><strong>Signature:</strong><br><code>function(view: TView, hasFocus: boolean) =&gt; void</code><br><em>view:</em> The new view to focus or not.<br><em>hasFocus:</em> <code>true</code> if the view should be focused.",
    "onMonthChange": "Callback fired on month change.<br><br><strong>Signature:</strong><br><code>function(month: TDate) =&gt; void</code><br><em>month:</em> The new month.",
    "onViewChange": "Callback fired on view change.<br><br><strong>Signature:</strong><br><code>function(view: TView) =&gt; void</code><br><em>view:</em> The new view.",
    "onYearChange": "Callback fired on year change.<br><br><strong>Signature:</strong><br><code>function(year: TDate) =&gt; void</code><br><em>year:</em> The new year.",
    "openTo": "The default visible view. Used when the component view is not controlled. Must be a valid option from <code>views</code> list.",
    "readOnly": "Make picker read only.",
    "reduceAnimations": "Disable heavy animations.",
    "renderLoading": "Component displaying when passed <code>loading</code> true.<br><br><strong>Signature:</strong><br><code>function() =&gt; React.ReactNode</code><br><br> <em>returns</em> (React.ReactNode): The node to render when loading.",
    "shouldDisableDate": "Disable specific date.<br><br><strong>Signature:</strong><br><code>function(day: TDate) =&gt; boolean</code><br><em>day:</em> The date to test.<br> <em>returns</em> (boolean): If <code>true</code> the date will be disabled.",
    "shouldDisableMonth": "Disable specific month.<br><br><strong>Signature:</strong><br><code>function(month: TDate) =&gt; boolean</code><br><em>month:</em> The month to test.<br> <em>returns</em> (boolean): If <code>true</code>, the month will be disabled.",
    "shouldDisableYear": "Disable specific year.<br><br><strong>Signature:</strong><br><code>function(year: TDate) =&gt; boolean</code><br><em>year:</em> The year to test.<br> <em>returns</em> (boolean): If <code>true</code>, the year will be disabled.",
    "showDaysOutsideCurrentMonth": "If <code>true</code>, days outside the current month are rendered:<br>- if <code>fixedWeekNumber</code> is defined, renders days to have the weeks requested.<br>- if <code>fixedWeekNumber</code> is not defined, renders day to fill the first and last week of the current month.<br>- ignored if <code>calendars</code> equals more than <code>1</code> on range pickers.",
    "slotProps": "The props used for each component slot.",
    "slots": "Overridable component slots.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "value": "The selected value. Used when the component is controlled.",
    "view": "The visible view. Used when the component view is controlled. Must be a valid option from <code>views</code> list.",
    "views": "Available views.",
    "yearsPerRow": "Years rendered per row."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "viewTransitionContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the transition group element"
    }
  },
  "slotDescriptions": {
    "Day": "Custom component for day.\nCheck the <a href=\"https://mui.com/x/api/date-pickers/pickers-day/\">PickersDay</a> component.",
    "LeftArrowIcon": "Icon displayed in the left view switch button.",
    "NextIconButton": "Button allowing to switch to the right view.",
    "PreviousIconButton": "Button allowing to switch to the left view.",
    "RightArrowIcon": "Icon displayed in the right view switch button.",
    "SwitchViewButton": "Button displayed to switch between different calendar views.",
    "SwitchViewIcon": "Icon displayed in the SwitchViewButton. Rotated by 180Â° when the open view is &#39;year&#39;."
  }
}
