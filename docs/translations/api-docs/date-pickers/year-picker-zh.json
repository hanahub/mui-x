{
  "componentDescription": "",
  "propDescriptions": {
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "className": "className applied to the root element.",
    "disabled": "If <code>true</code> picker is disabled",
    "disableFuture": "If <code>true</code> future days are disabled.",
    "disableHighlightToday": "If <code>true</code>, today&#39;s date is rendering without highlighting with circle.",
    "disablePast": "If <code>true</code> past days are disabled.",
    "maxDate": "Maximal selectable date. @DateIOType",
    "minDate": "Minimal selectable date. @DateIOType",
    "onChange": "Callback fired when the value (the selected year) changes.<br><br><strong>Signature:</strong><br><code>function(value: TValue) =&gt; void</code><br><em>value:</em> The new parsed value.",
    "readOnly": "If <code>true</code> picker is readonly",
    "shouldDisableYear": "Disable specific years dynamically. Works like <code>shouldDisableDate</code> but for year selection view @DateIOType.<br><br><strong>Signature:</strong><br><code>function(year: TDate) =&gt; boolean</code><br><em>year:</em> The year to test.<br> <em>returns</em> (boolean): Returns <code>true</code> if the year should be disabled.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details."
  },
  "classDescriptions": { "root": { "description": "Styles applied to the root element." } },
  "slotDescriptions": {}
}
