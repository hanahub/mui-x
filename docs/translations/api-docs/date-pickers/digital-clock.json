{
  "componentDescription": "",
  "propDescriptions": {
    "ampm": "12h/24h view for hour selection clock.",
    "autoFocus": "If <code>true</code>, the main element is focused during the first mount. This main element is: - the element chosen by the visible view if any (i.e: the selected day on the <code>day</code> view). - the <code>input</code> element if there is a field rendered.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "components": "Overrideable components.",
    "componentsProps": "The props used for each component slot.",
    "defaultValue": "The default selected value. Used when the component is not controlled.",
    "disabled": "If <code>true</code>, the picker views and text field are disabled.",
    "disableFuture": "If <code>true</code>, disable values after the current date for date components, time for time components and both for date time components.",
    "disableIgnoringDatePartForTimeValidation": "Do not ignore date part when validating min/max time.",
    "disablePast": "If <code>true</code>, disable values before the current date for date components, time for time components and both for date time components.",
    "focusedView": "Controlled focused view.",
    "maxTime": "Maximal selectable time. The date part of the object will be ignored unless <code>props.disableIgnoringDatePartForTimeValidation === true</code>.",
    "minTime": "Minimal selectable time. The date part of the object will be ignored unless <code>props.disableIgnoringDatePartForTimeValidation === true</code>.",
    "minutesStep": "Step over minutes.",
    "onChange": "Callback fired when the value changes.<br><br><strong>Signature:</strong><br><code>function(value: TDate | null, selectionState: PickerSelectionState | undefined, selectedView: TView | undefined) =&gt; void</code><br><em>value:</em> The new value.<br><em>selectionState:</em> Indicates if the date selection is complete.<br><em>selectedView:</em> Indicates the view in which the selection has been made.",
    "onFocusedViewChange": "Callback fired on focused view change.<br><br><strong>Signature:</strong><br><code>function(view: TView, hasFocus: boolean) =&gt; void</code><br><em>view:</em> The new view to focus or not.<br><em>hasFocus:</em> <code>true</code> if the view should be focused.",
    "onViewChange": "Callback fired on view change.<br><br><strong>Signature:</strong><br><code>function(view: TView) =&gt; void</code><br><em>view:</em> The new view.",
    "openTo": "The default visible view. Used when the component view is not controlled. Must be a valid option from <code>views</code> list.",
    "readOnly": "If <code>true</code>, the picker views and text field are read-only.",
    "shouldDisableClock": "Disable specific clock time.<br><br><strong>Signature:</strong><br><code>function(clockValue: number, view: TimeView) =&gt; boolean</code><br><em>clockValue:</em> The value to check.<br><em>view:</em> The clock type of the timeValue.<br> <em>returns</em> (boolean): If <code>true</code> the time will be disabled.",
    "shouldDisableTime": "Disable specific time.<br><br><strong>Signature:</strong><br><code>function(value: TDate, view: TimeView) =&gt; boolean</code><br><em>value:</em> The value to check.<br><em>view:</em> The clock type of the timeValue.<br> <em>returns</em> (boolean): If <code>true</code> the time will be disabled.",
    "skipDisabled": "If <code>true</code>, disabled digital clock items will not be rendered.",
    "slotProps": "The props used for each component slot.",
    "slots": "Overrideable component slots.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "timeStep": "The time steps between two time options. For example, if <code>timeStep = 45</code>, then the available time options will be <code>[00:00, 00:45, 01:30, 02:15, 03:00, etc.]</code>.",
    "timezone": "Choose which timezone to use for the value. Example: &quot;default&quot;, &quot;system&quot;, &quot;UTC&quot;, &quot;America/New_York&quot;. If you pass values from other timezones to some props, they will be converted to this timezone before being used. See the <a href=\"https://mui.com/x/react-date-pickers/timezone/\">timezones documention</a> for more details.",
    "value": "The selected value. Used when the component is controlled.",
    "view": "The visible view. Used when the component view is controlled. Must be a valid option from <code>views</code> list.",
    "views": "Available views."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "list": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the list (by default: MenuList) element"
    },
    "item": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the list item (by default: MenuItem) element"
    }
  },
  "slotDescriptions": {
    "digitalClockItem": "Component responsible for rendering a single digital clock item."
  }
}
