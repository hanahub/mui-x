{
  "componentDescription": "",
  "propDescriptions": {
    "ampm": "12h/24h view for hour selection clock.",
    "ampmInClock": "Display ampm controls under the clock (instead of in the toolbar).",
    "autoFocus": "Set to <code>true</code> if focus should be moved to clock picker.",
    "classes": "Override or extend the styles applied to the component. See <a href=\"#css\">CSS API</a> below for more details.",
    "components": "Overrideable components.",
    "componentsProps": "The props used for each component slot.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableFuture": "If <code>true</code> disable values before the current time",
    "disableIgnoringDatePartForTimeValidation": "Do not ignore date part when validating min/max time.",
    "disablePast": "If <code>true</code> disable values after the current time.",
    "maxTime": "Max time acceptable time. For input validation date part of passed object will be ignored if <code>disableIgnoringDatePartForTimeValidation</code> not specified.",
    "minTime": "Min time acceptable time. For input validation date part of passed object will be ignored if <code>disableIgnoringDatePartForTimeValidation</code> not specified.",
    "minutesStep": "Step over minutes.",
    "onChange": "On change callback @DateIOType.",
    "onViewChange": "Callback fired on view change.<br><br><strong>Signature:</strong><br><code>function(view: ClockPickerView) =&gt; void</code><br><em>view:</em> The new view.",
    "openTo": "Initially open view.",
    "readOnly": "Make picker read only.",
    "shouldDisableTime": "Dynamically check if time is disabled or not. If returns <code>false</code> appropriate time point will ot be acceptable.<br><br><strong>Signature:</strong><br><code>function(timeValue: number, clockType: ClockPickerView) =&gt; boolean</code><br><em>timeValue:</em> The value to check.<br><em>clockType:</em> The clock type of the timeValue.<br> <em>returns</em> (boolean): Returns <code>true</code> if the time should be disabled",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "value": "Selected date @DateIOType.",
    "view": "Controlled open view.",
    "views": "Views for calendar picker."
  },
  "classDescriptions": {
    "root": { "description": "Styles applied to the root element." },
    "arrowSwitcher": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the arrowSwitcher element"
    }
  },
  "slotDescriptions": {
    "PreviousIconButton": "Button allowing to switch to the left view.",
    "NextIconButton": "Button allowing to switch to the right view.",
    "LeftArrowIcon": "Icon displayed in the left view switch button.",
    "RightArrowIcon": "Icon displayed in the right view switch button."
  }
}
