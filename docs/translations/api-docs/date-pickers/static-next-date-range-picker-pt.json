{
  "componentDescription": "",
  "propDescriptions": {
    "calendars": "The number of calendars to render.",
    "className": "Class name applied to the root element.",
    "components": "Overrideable components.",
    "componentsProps": "The props used for each component slot.",
    "dayOfWeekFormatter": "Formats the day of week displayed in the calendar header.<br><br><strong>Signature:</strong><br><code>function(day: string) =&gt; string</code><br><em>day:</em> The day of week provided by the adapter&#39;s method <code>getWeekdays</code>.<br> <em>returns</em> (string): The name to display.",
    "defaultCalendarMonth": "Default calendar month displayed when <code>value={[null, null]}</code>.",
    "defaultValue": "The default value. Used when the component is not controlled.",
    "disableAutoMonthSwitching": "If <code>true</code>, after selecting <code>start</code> date calendar will not automatically switch to the month of <code>end</code> date.",
    "disabled": "If <code>true</code>, the picker and text field are disabled.",
    "disableFuture": "If <code>true</code> disable values before the current date for date components, time for time components and both for date time components.",
    "disableHighlightToday": "If <code>true</code>, today&#39;s date is rendering without highlighting with circle.",
    "disablePast": "If <code>true</code> disable values after the current date for date components, time for time components and both for date time components.",
    "displayStaticWrapperAs": "Force static wrapper inner components to be rendered in mobile or desktop mode.",
    "displayWeekNumber": "If <code>true</code>, the week number will be display in the calendar.",
    "fixedWeekNumber": "Calendar will show more weeks in order to match this value. Put it to 6 for having fix number of week in Gregorian calendars",
    "loading": "If <code>true</code> renders <code>LoadingComponent</code> in calendar instead of calendar view. Can be used to preload information and show it in calendar.",
    "localeText": "Locale for components texts. Allows overriding texts coming from <code>LocalizationProvider</code> and <code>theme</code>.",
    "maxDate": "Maximal selectable date.",
    "minDate": "Minimal selectable date.",
    "onAccept": "Callback fired when the value is accepted.<br><br><strong>Signature:</strong><br><code>function(value: TValue) =&gt; void</code><br><em>value:</em> The value that was just accepted.",
    "onChange": "Callback fired when the value changes.<br><br><strong>Signature:</strong><br><code>function(value: TValue, The: FieldChangeHandlerContext&lt;TError&gt;) =&gt; void</code><br><em>value:</em> The new value.<br><em>The:</em> context containing the validation result of the current value.",
    "onError": "Callback fired when the error associated to the current value changes. If the error has a non-null value, then the <code>TextField</code> will be rendered in <code>error</code> state.<br><br><strong>Signature:</strong><br><code>function(error: TError, value: TValue) =&gt; void</code><br><em>error:</em> The new error describing why the current value is not valid.<br><em>value:</em> The value associated to the error.",
    "onMonthChange": "Callback firing on month change @DateIOType.<br><br><strong>Signature:</strong><br><code>function(month: TDate) =&gt; void | Promise</code><br><em>month:</em> The new month.<br> <em>returns</em> (void | Promise): -",
    "reduceAnimations": "Disable heavy animations.",
    "renderLoading": "Component displaying when passed <code>loading</code> true.<br><br><strong>Signature:</strong><br><code>function() =&gt; React.ReactNode</code><br><br> <em>returns</em> (React.ReactNode): The node to render when loading.",
    "shouldDisableDate": "Disable specific date. @DateIOType<br><br><strong>Signature:</strong><br><code>function(day: TDate, position: string) =&gt; boolean</code><br><em>day:</em> The date to test.<br><em>position:</em> The date to test, &#39;start&#39; or &#39;end&#39;.<br> <em>returns</em> (boolean): Returns <code>true</code> if the date should be disabled.",
    "showDaysOutsideCurrentMonth": "If <code>true</code>, days that have <code>outsideCurrentMonth={true}</code> are displayed.",
    "showToolbar": "If <code>true</code>, the toolbar will be visible.",
    "sx": "The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "value": "The selected value. Used when the component is controlled."
  },
  "classDescriptions": {},
  "slotDescriptions": {
    "Toolbar": "Custom component for the toolbar rendered above the views.",
    "Day": "Custom component for day in range pickers.\nCheck the <a href=\"https://mui.com/x/api/date-pickers/date-range-picker-day/\">DateRangePickersDay</a> component.",
    "PreviousIconButton": "Button allowing to switch to the left view.",
    "NextIconButton": "Button allowing to switch to the right view.",
    "LeftArrowIcon": "Icon displayed in the left view switch button.",
    "RightArrowIcon": "Icon displayed in the right view switch button.",
    "SwitchViewButton": "Button displayed to switch between different calendar views.",
    "SwitchViewIcon": "Icon displayed in the SwitchViewButton. Rotated by 180Â° when the open view is &#39;year&#39;.",
    "ActionBar": "Custom component for the action bar, it is placed bellow the picker views.",
    "PaperContent": "Custom component wrapping the views of the desktop and static pickers (it is the direct child of the Paper component)."
  }
}
