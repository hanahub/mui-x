{
  "props": {
    "columns": {
      "type": { "name": "arrayOf", "description": "Array&lt;object&gt;" },
      "required": true
    },
    "rows": {
      "type": { "name": "arrayOf", "description": "Array&lt;object&gt;" },
      "required": true
    },
    "aggregationFunctions": {
      "type": { "name": "object" },
      "default": "GRID_AGGREGATION_FUNCTIONS"
    },
    "aggregationModel": { "type": { "name": "object" } },
    "aggregationRowsScope": {
      "type": { "name": "enum", "description": "'all'<br>&#124;&nbsp;'filtered'" },
      "default": "\"filtered\""
    },
    "apiRef": { "type": { "name": "shape", "description": "{ current: object }" } },
    "aria-label": { "type": { "name": "string" } },
    "aria-labelledby": { "type": { "name": "string" } },
    "autoHeight": { "type": { "name": "bool" }, "default": "false" },
    "autoPageSize": { "type": { "name": "bool" }, "default": "false" },
    "autosizeOnMount": { "type": { "name": "bool" }, "default": "false" },
    "autosizeOptions": {
      "type": {
        "name": "shape",
        "description": "{ columns?: Array&lt;string&gt;, expand?: bool, includeHeaders?: bool, includeOutliers?: bool, outliersFactor?: number }"
      }
    },
    "cellModesModel": { "type": { "name": "object" } },
    "cellSelection": { "type": { "name": "bool" }, "default": "false" },
    "cellSelectionModel": { "type": { "name": "object" } },
    "checkboxSelection": { "type": { "name": "bool" }, "default": "false" },
    "checkboxSelectionVisibleOnly": { "type": { "name": "bool" }, "default": "false" },
    "classes": { "type": { "name": "object" }, "additionalInfo": { "cssApi": true } },
    "clipboardCopyCellDelimiter": { "type": { "name": "string" }, "default": "'\\t'" },
    "columnBuffer": { "type": { "name": "number" }, "default": "3" },
    "columnHeaderHeight": { "type": { "name": "number" }, "default": "56" },
    "columnThreshold": { "type": { "name": "number" }, "default": "3" },
    "columnVisibilityModel": { "type": { "name": "object" } },
    "defaultGroupingExpansionDepth": { "type": { "name": "number" }, "default": "0" },
    "density": {
      "type": {
        "name": "enum",
        "description": "'comfortable'<br>&#124;&nbsp;'compact'<br>&#124;&nbsp;'standard'"
      },
      "default": "\"standard\""
    },
    "detailPanelExpandedRowIds": {
      "type": { "name": "arrayOf", "description": "Array&lt;number<br>&#124;&nbsp;string&gt;" }
    },
    "disableAggregation": { "type": { "name": "bool" }, "default": "false" },
    "disableAutosize": { "type": { "name": "bool" }, "default": "false" },
    "disableChildrenFiltering": { "type": { "name": "bool" }, "default": "false" },
    "disableChildrenSorting": { "type": { "name": "bool" }, "default": "false" },
    "disableClipboardPaste": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnFilter": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnMenu": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnPinning": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnReorder": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnResize": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnSelector": { "type": { "name": "bool" }, "default": "false" },
    "disableColumnSorting": { "type": { "name": "bool" }, "default": "false" },
    "disableDensitySelector": { "type": { "name": "bool" }, "default": "false" },
    "disableEval": { "type": { "name": "bool" }, "default": "false" },
    "disableMultipleColumnsFiltering": { "type": { "name": "bool" }, "default": "false" },
    "disableMultipleColumnsSorting": { "type": { "name": "bool" }, "default": "false" },
    "disableMultipleRowSelection": {
      "type": { "name": "bool" },
      "default": "false (`!props.checkboxSelection` for MIT Data Grid)"
    },
    "disableRowGrouping": { "type": { "name": "bool" }, "default": "false" },
    "disableRowSelectionOnClick": { "type": { "name": "bool" }, "default": "false" },
    "disableVirtualization": { "type": { "name": "bool" }, "default": "false" },
    "editMode": {
      "type": { "name": "enum", "description": "'cell'<br>&#124;&nbsp;'row'" },
      "default": "\"cell\""
    },
    "experimentalFeatures": {
      "type": {
        "name": "shape",
        "description": "{ ariaV7?: bool, lazyLoading?: bool, warnIfFocusStateIsNotSynced?: bool }"
      }
    },
    "filterDebounceMs": { "type": { "name": "number" }, "default": "150" },
    "filterMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "filterModel": {
      "type": {
        "name": "shape",
        "description": "{ items: Array&lt;{ field: string, id?: number<br>&#124;&nbsp;string, operator: string, value?: any }&gt;, logicOperator?: 'and'<br>&#124;&nbsp;'or', quickFilterExcludeHiddenColumns?: bool, quickFilterLogicOperator?: 'and'<br>&#124;&nbsp;'or', quickFilterValues?: array }"
      }
    },
    "getAggregationPosition": {
      "type": { "name": "func" },
      "default": "`(groupNode) => groupNode == null ? 'footer' : 'inline'`",
      "signature": {
        "type": "function(groupNode: GridGroupNode) => GridAggregationPosition | null",
        "describedArgs": ["groupNode"],
        "returned": "GridAggregationPosition | null"
      }
    },
    "getCellClassName": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams) => string",
        "describedArgs": ["params"],
        "returned": "string"
      }
    },
    "getDetailPanelContent": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams) => React.JSX.Element",
        "describedArgs": ["params"],
        "returned": "React.JSX.Element"
      }
    },
    "getDetailPanelHeight": {
      "type": { "name": "func" },
      "default": "\"() => 500\"",
      "signature": {
        "type": "function(params: GridRowParams) => number | string",
        "describedArgs": ["params"],
        "returned": "number | string"
      }
    },
    "getEstimatedRowHeight": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowHeightParams) => number | null",
        "describedArgs": ["params"],
        "returned": "number | null"
      }
    },
    "getRowClassName": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowClassNameParams) => string",
        "describedArgs": ["params"],
        "returned": "string"
      }
    },
    "getRowHeight": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowHeightParams) => GridRowHeightReturnValue",
        "describedArgs": ["params"],
        "returned": "GridRowHeightReturnValue"
      }
    },
    "getRowId": { "type": { "name": "func" } },
    "getRowSpacing": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowSpacingParams) => GridRowSpacing",
        "describedArgs": ["params"],
        "returned": "GridRowSpacing"
      }
    },
    "getTreeDataPath": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(row: R) => Array<string>",
        "describedArgs": ["row"],
        "returned": "Array<string>"
      }
    },
    "groupingColDef": { "type": { "name": "union", "description": "func<br>&#124;&nbsp;object" } },
    "headerFilters": { "type": { "name": "bool" }, "default": "false" },
    "hideFooter": { "type": { "name": "bool" }, "default": "false" },
    "hideFooterPagination": { "type": { "name": "bool" }, "default": "false" },
    "hideFooterRowCount": { "type": { "name": "bool" }, "default": "false" },
    "hideFooterSelectedRowCount": { "type": { "name": "bool" }, "default": "false" },
    "ignoreDiacritics": { "type": { "name": "bool" }, "default": "false" },
    "ignoreValueFormatterDuringExport": {
      "type": {
        "name": "union",
        "description": "{ clipboardExport?: bool, csvExport?: bool }<br>&#124;&nbsp;bool"
      },
      "default": "false"
    },
    "initialState": { "type": { "name": "object" } },
    "isCellEditable": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams) => boolean",
        "describedArgs": ["params"],
        "returned": "boolean"
      }
    },
    "isGroupExpandedByDefault": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(node: GridGroupNode) => boolean",
        "describedArgs": ["node"],
        "returned": "boolean"
      }
    },
    "isRowSelectable": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams) => boolean",
        "describedArgs": ["params"],
        "returned": "boolean"
      }
    },
    "keepColumnPositionIfDraggedOutside": { "type": { "name": "bool" }, "default": "false" },
    "keepNonExistentRowsSelected": { "type": { "name": "bool" }, "default": "false" },
    "loading": { "type": { "name": "bool" } },
    "localeText": { "type": { "name": "object" } },
    "logger": {
      "type": {
        "name": "shape",
        "description": "{ debug: func, error: func, info: func, warn: func }"
      },
      "default": "console"
    },
    "logLevel": {
      "type": {
        "name": "enum",
        "description": "'debug'<br>&#124;&nbsp;'error'<br>&#124;&nbsp;'info'<br>&#124;&nbsp;'warn'<br>&#124;&nbsp;false"
      },
      "default": "\"error\" (\"warn\" in dev mode)"
    },
    "nonce": { "type": { "name": "string" } },
    "onAggregationModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridAggregationModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onCellClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onCellDoubleClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onCellEditStart": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.KeyboardEvent | React.MouseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onCellEditStop": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<MuiBaseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onCellKeyDown": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridCellParams, event: MuiEvent<React.KeyboardEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onCellModesModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(cellModesModel: GridCellModesModel, details: GridCallbackDetails) => void",
        "describedArgs": ["cellModesModel", "details"]
      }
    },
    "onCellSelectionModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(cellSelectionModel: GridCellSelectionModel, details: GridCallbackDetails) => void",
        "describedArgs": ["cellSelectionModel", "details"]
      }
    },
    "onClipboardCopy": {
      "type": { "name": "func" },
      "signature": { "type": "function(data: string) => void", "describedArgs": ["data"] }
    },
    "onClipboardPasteEnd": { "type": { "name": "func" } },
    "onClipboardPasteStart": { "type": { "name": "func" } },
    "onColumnHeaderClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderDoubleClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderEnter": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderLeave": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderOut": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnHeaderOver": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnHeaderParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnOrderChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnOrderChangeParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnResize": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnResizeParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onColumnVisibilityModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridColumnVisibilityModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onColumnWidthChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridColumnResizeParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onDetailPanelExpandedRowIdsChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(ids: Array<GridRowId>, details: GridCallbackDetails) => void",
        "describedArgs": ["ids", "details"]
      }
    },
    "onExcelExportStateChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(inProgress: string) => void",
        "describedArgs": ["inProgress"]
      }
    },
    "onFetchRows": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridFetchRowsParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onFilterModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridFilterModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onMenuClose": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridMenuParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onMenuOpen": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridMenuParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onPaginationModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridPaginationModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onPinnedColumnsChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(pinnedColumns: GridPinnedColumnFields, details: GridCallbackDetails) => void",
        "describedArgs": ["pinnedColumns", "details"]
      }
    },
    "onPreferencePanelClose": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridPreferencePanelParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onPreferencePanelOpen": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridPreferencePanelParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onProcessRowUpdateError": {
      "type": { "name": "func" },
      "signature": { "type": "function(error: any) => void", "describedArgs": ["error"] }
    },
    "onResize": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(containerSize: ElementSize, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["containerSize", "event", "details"]
      }
    },
    "onRowClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onRowDoubleClick": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<React.MouseEvent>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onRowEditCommit": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(id: GridRowId, event: MuiEvent<MuiBaseEvent>) => void",
        "describedArgs": ["id", "event"]
      }
    },
    "onRowEditStart": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<React.KeyboardEvent | React.MouseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onRowEditStop": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowParams, event: MuiEvent<MuiBaseEvent>) => void",
        "describedArgs": ["params", "event"]
      }
    },
    "onRowGroupingModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridRowGroupingModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "onRowModesModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(rowModesModel: GridRowModesModel, details: GridCallbackDetails) => void",
        "describedArgs": ["rowModesModel", "details"]
      }
    },
    "onRowOrderChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowOrderChangeParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onRowSelectionModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(rowSelectionModel: GridRowSelectionModel, details: GridCallbackDetails) => void",
        "describedArgs": ["rowSelectionModel", "details"]
      }
    },
    "onRowsScrollEnd": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(params: GridRowScrollEndParams, event: MuiEvent<{}>, details: GridCallbackDetails) => void",
        "describedArgs": ["params", "event", "details"]
      }
    },
    "onSortModelChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(model: GridSortModel, details: GridCallbackDetails) => void",
        "describedArgs": ["model", "details"]
      }
    },
    "pageSizeOptions": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;number<br>&#124;&nbsp;{ label: string, value: number }&gt;"
      },
      "default": "[25, 50, 100]"
    },
    "pagination": { "type": { "name": "bool" }, "default": "false" },
    "paginationMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "paginationModel": {
      "type": { "name": "shape", "description": "{ page: number, pageSize: number }" }
    },
    "pinnedColumns": {
      "type": {
        "name": "shape",
        "description": "{ left?: Array&lt;string&gt;, right?: Array&lt;string&gt; }"
      }
    },
    "pinnedRows": {
      "type": {
        "name": "shape",
        "description": "{ bottom?: Array&lt;object&gt;, top?: Array&lt;object&gt; }"
      }
    },
    "processRowUpdate": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(newRow: R, oldRow: R) => Promise<R> | R",
        "describedArgs": ["newRow", "oldRow"],
        "returned": "Promise<R> | R"
      }
    },
    "rowBuffer": { "type": { "name": "number" }, "default": "3" },
    "rowCount": { "type": { "name": "number" } },
    "rowGroupingColumnMode": {
      "type": { "name": "enum", "description": "'multiple'<br>&#124;&nbsp;'single'" },
      "default": "'single'"
    },
    "rowGroupingModel": { "type": { "name": "arrayOf", "description": "Array&lt;string&gt;" } },
    "rowHeight": { "type": { "name": "number" }, "default": "52" },
    "rowModesModel": { "type": { "name": "object" } },
    "rowPositionsDebounceMs": { "type": { "name": "number" }, "default": "166" },
    "rowReordering": { "type": { "name": "bool" }, "default": "false" },
    "rowSelection": { "type": { "name": "bool" }, "default": "true" },
    "rowSelectionModel": {
      "type": {
        "name": "union",
        "description": "Array&lt;number<br>&#124;&nbsp;string&gt;<br>&#124;&nbsp;number<br>&#124;&nbsp;string"
      }
    },
    "rowsLoadingMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" }
    },
    "rowSpacingType": {
      "type": { "name": "enum", "description": "'border'<br>&#124;&nbsp;'margin'" },
      "default": "\"margin\""
    },
    "rowThreshold": { "type": { "name": "number" }, "default": "3" },
    "scrollbarSize": { "type": { "name": "number" } },
    "scrollEndThreshold": { "type": { "name": "number" }, "default": "80" },
    "showCellVerticalBorder": { "type": { "name": "bool" }, "default": "false" },
    "showColumnVerticalBorder": { "type": { "name": "bool" }, "default": "false" },
    "slotProps": { "type": { "name": "object" } },
    "slots": { "type": { "name": "object" }, "additionalInfo": { "slotsApi": true } },
    "sortingMode": {
      "type": { "name": "enum", "description": "'client'<br>&#124;&nbsp;'server'" },
      "default": "\"client\""
    },
    "sortingOrder": {
      "type": { "name": "arrayOf", "description": "Array&lt;'asc'<br>&#124;&nbsp;'desc'&gt;" },
      "default": "['asc', 'desc', null]"
    },
    "sortModel": {
      "type": {
        "name": "arrayOf",
        "description": "Array&lt;{ field: string, sort?: 'asc'<br>&#124;&nbsp;'desc' }&gt;"
      }
    },
    "splitClipboardPastedText": {
      "type": { "name": "func" },
      "signature": { "type": "function(text: string) => void", "describedArgs": ["text"] }
    },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalInfo": { "sx": true }
    },
    "throttleRowsMs": { "type": { "name": "number" }, "default": "0" },
    "treeData": { "type": { "name": "bool" }, "default": "false" }
  },
  "name": "DataGridPremium",
  "imports": [
    "import { DataGridPremium } from '@mui/x-data-grid-premium/DataGridPremium';",
    "import { DataGridPremium } from '@mui/x-data-grid-premium';"
  ],
  "classes": [
    {
      "key": "actionsCell",
      "className": "MuiDataGridPremium-actionsCell",
      "description": "Styles applied to the root element of the cell with type=\"actions\".",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader",
      "className": "MuiDataGridPremium-aggregationColumnHeader",
      "description": "Styles applied to the root element of the column header when aggregated.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader--alignCenter",
      "className": "MuiDataGridPremium-aggregationColumnHeader--alignCenter",
      "description": "Styles applied to the root element of the header when aggregation if `headerAlign=\"center\"`.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader--alignLeft",
      "className": "MuiDataGridPremium-aggregationColumnHeader--alignLeft",
      "description": "Styles applied to the root element of the header when aggregation if `headerAlign=\"left\"`.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeader--alignRight",
      "className": "MuiDataGridPremium-aggregationColumnHeader--alignRight",
      "description": "Styles applied to the root element of the header when aggregation if `headerAlign=\"right\"`.",
      "isGlobal": false
    },
    {
      "key": "aggregationColumnHeaderLabel",
      "className": "MuiDataGridPremium-aggregationColumnHeaderLabel",
      "description": "Styles applied to the aggregation label in the column header when aggregated.",
      "isGlobal": false
    },
    {
      "key": "autoHeight",
      "className": "MuiDataGridPremium-autoHeight",
      "description": "Styles applied to the root element if `autoHeight={true}`.",
      "isGlobal": false
    },
    {
      "key": "autosizing",
      "className": "MuiDataGridPremium-autosizing",
      "description": "Styles applied to the root element while it is being autosized.",
      "isGlobal": false
    },
    {
      "key": "booleanCell",
      "className": "MuiDataGridPremium-booleanCell",
      "description": "Styles applied to the icon of the boolean cell.",
      "isGlobal": false
    },
    {
      "key": "cell",
      "className": "MuiDataGridPremium-cell",
      "description": "Styles applied to the cell element.",
      "isGlobal": false
    },
    {
      "key": "cell--editable",
      "className": "MuiDataGridPremium-cell--editable",
      "description": "Styles applied to the cell element if the cell is editable.",
      "isGlobal": false
    },
    {
      "key": "cell--editing",
      "className": "MuiDataGridPremium-cell--editing",
      "description": "Styles applied to the cell element if the cell is in edit mode.",
      "isGlobal": false
    },
    {
      "key": "cell--pinnedLeft",
      "className": "MuiDataGridPremium-cell--pinnedLeft",
      "description": "Styles applied to the cell element if it is pinned to the left.",
      "isGlobal": false
    },
    {
      "key": "cell--pinnedRight",
      "className": "MuiDataGridPremium-cell--pinnedRight",
      "description": "Styles applied to the cell element if it is pinned to the right.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeBottom",
      "className": "MuiDataGridPremium-cell--rangeBottom",
      "description": "Styles applied to the cell element if it is at the bottom edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeLeft",
      "className": "MuiDataGridPremium-cell--rangeLeft",
      "description": "Styles applied to the cell element if it is at the left edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeRight",
      "className": "MuiDataGridPremium-cell--rangeRight",
      "description": "Styles applied to the cell element if it is at the right edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--rangeTop",
      "className": "MuiDataGridPremium-cell--rangeTop",
      "description": "Styles applied to the cell element if it is at the top edge of a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--selectionMode",
      "className": "MuiDataGridPremium-cell--selectionMode",
      "description": "Styles applied to the cell element if it is in a cell selection range.",
      "isGlobal": false
    },
    {
      "key": "cell--textCenter",
      "className": "MuiDataGridPremium-cell--textCenter",
      "description": "Styles applied to the cell element if `align=\"center\"`.",
      "isGlobal": false
    },
    {
      "key": "cell--textLeft",
      "className": "MuiDataGridPremium-cell--textLeft",
      "description": "Styles applied to the cell element if `align=\"left\"`.",
      "isGlobal": false
    },
    {
      "key": "cell--textRight",
      "className": "MuiDataGridPremium-cell--textRight",
      "description": "Styles applied to the cell element if `align=\"right\"`.",
      "isGlobal": false
    },
    {
      "key": "cell--withLeftBorder",
      "className": "MuiDataGridPremium-cell--withLeftBorder",
      "description": "Styles applied the cell if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    },
    {
      "key": "cell--withRenderer",
      "className": "MuiDataGridPremium-cell--withRenderer",
      "description": "Styles applied to the cell element if the cell has a custom renderer.",
      "isGlobal": false
    },
    {
      "key": "cell--withRightBorder",
      "className": "MuiDataGridPremium-cell--withRightBorder",
      "description": "Styles applied the cell if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    },
    {
      "key": "cellCheckbox",
      "className": "MuiDataGridPremium-cellCheckbox",
      "description": "Styles applied to the cell checkbox element.",
      "isGlobal": false
    },
    {
      "key": "cellContent",
      "className": "MuiDataGridPremium-cellContent",
      "description": "Styles applied to the element that wraps the cell content.",
      "isGlobal": false
    },
    {
      "key": "cellEmpty",
      "className": "MuiDataGridPremium-cellEmpty",
      "description": "Styles applied to the empty cell element.",
      "isGlobal": false
    },
    {
      "key": "cellSkeleton",
      "className": "MuiDataGridPremium-cellSkeleton",
      "description": "Styles applied to the skeleton cell element.",
      "isGlobal": false
    },
    {
      "key": "checkboxInput",
      "className": "MuiDataGridPremium-checkboxInput",
      "description": "Styles applied to the selection checkbox element.",
      "isGlobal": false
    },
    {
      "key": "columnGroupHeader",
      "className": "MuiDataGridPremium-columnGroupHeader",
      "description": "Styles applied to the column group header element.",
      "isGlobal": false
    },
    {
      "key": "columnHeader",
      "className": "MuiDataGridPremium-columnHeader",
      "description": "Styles applied to the column header element.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--alignCenter",
      "className": "MuiDataGridPremium-columnHeader--alignCenter",
      "description": "Styles applied to the column header if `headerAlign=\"center\"`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--alignLeft",
      "className": "MuiDataGridPremium-columnHeader--alignLeft",
      "description": "Styles applied to the column header if `headerAlign=\"left\"`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--alignRight",
      "className": "MuiDataGridPremium-columnHeader--alignRight",
      "description": "Styles applied to the column header if `headerAlign=\"right\"`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--dragging",
      "className": "MuiDataGridPremium-columnHeader--dragging",
      "description": "Styles applied to the floating column header element when it is dragged.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--emptyGroup",
      "className": "MuiDataGridPremium-columnHeader--emptyGroup",
      "description": "Styles applied to the empty column group header cell.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--filledGroup",
      "className": "MuiDataGridPremium-columnHeader--filledGroup",
      "description": "Styles applied to the column group header cell if not empty.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--filtered",
      "className": "MuiDataGridPremium-columnHeader--filtered",
      "description": "Styles applied to the column header if the column has a filter applied to it.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--moving",
      "className": "MuiDataGridPremium-columnHeader--moving",
      "description": "Styles applied to the column header if it is being dragged.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--numeric",
      "className": "MuiDataGridPremium-columnHeader--numeric",
      "description": "Styles applied to the column header if the type of the column is `number`.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--showColumnBorder",
      "className": "MuiDataGridPremium-columnHeader--showColumnBorder",
      "description": "Styles applied to the column group header cell when show column border.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--sortable",
      "className": "MuiDataGridPremium-columnHeader--sortable",
      "description": "Styles applied to the column header if the column is sortable.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--sorted",
      "className": "MuiDataGridPremium-columnHeader--sorted",
      "description": "Styles applied to the column header if the column is sorted.",
      "isGlobal": false
    },
    {
      "key": "columnHeader--withRightBorder",
      "className": "MuiDataGridPremium-columnHeader--withRightBorder",
      "description": "Styles applied the column header if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderCheckbox",
      "className": "MuiDataGridPremium-columnHeaderCheckbox",
      "description": "Styles applied to the header checkbox cell element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderDraggableContainer",
      "className": "MuiDataGridPremium-columnHeaderDraggableContainer",
      "description": "Styles applied to the column header's draggable container element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderDropZone",
      "className": "MuiDataGridPremium-columnHeaderDropZone",
      "description": "Styles applied to the column headers wrapper if a column is being dragged.",
      "isGlobal": false
    },
    {
      "key": "columnHeaders",
      "className": "MuiDataGridPremium-columnHeaders",
      "description": "Styles applied to the column headers.",
      "isGlobal": false
    },
    {
      "key": "columnHeadersInner",
      "className": "MuiDataGridPremium-columnHeadersInner",
      "description": "Styles applied to the column headers's inner element.",
      "isGlobal": false
    },
    {
      "key": "columnHeadersInner--scrollable",
      "className": "MuiDataGridPremium-columnHeadersInner--scrollable",
      "description": "Styles applied to the column headers's inner element if there is a horizontal scrollbar.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderTitle",
      "className": "MuiDataGridPremium-columnHeaderTitle",
      "description": "Styles applied to the column header's title element;",
      "isGlobal": false
    },
    {
      "key": "columnHeaderTitleContainer",
      "className": "MuiDataGridPremium-columnHeaderTitleContainer",
      "description": "Styles applied to the column header's title container element.",
      "isGlobal": false
    },
    {
      "key": "columnHeaderTitleContainerContent",
      "className": "MuiDataGridPremium-columnHeaderTitleContainerContent",
      "description": "Styles applied to the column header's title excepted buttons.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator",
      "className": "MuiDataGridPremium-columnSeparator",
      "description": "Styles applied to the column header separator element.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--resizable",
      "className": "MuiDataGridPremium-columnSeparator--resizable",
      "description": "Styles applied to the column header separator if the column is resizable.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--resizing",
      "className": "MuiDataGridPremium-columnSeparator--resizing",
      "description": "Styles applied to the column header separator if the column is being resized.",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--sideLeft",
      "className": "MuiDataGridPremium-columnSeparator--sideLeft",
      "description": "Styles applied to the column header separator if the side is \"left\".",
      "isGlobal": false
    },
    {
      "key": "columnSeparator--sideRight",
      "className": "MuiDataGridPremium-columnSeparator--sideRight",
      "description": "Styles applied to the column header separator if the side is \"right\".",
      "isGlobal": false
    },
    {
      "key": "columnsPanel",
      "className": "MuiDataGridPremium-columnsPanel",
      "description": "Styles applied to the columns panel element.",
      "isGlobal": false
    },
    {
      "key": "columnsPanelRow",
      "className": "MuiDataGridPremium-columnsPanelRow",
      "description": "Styles applied to the columns panel row element.",
      "isGlobal": false
    },
    {
      "key": "container--bottom",
      "className": "MuiDataGridPremium-container--bottom",
      "description": "Styles applied to the bottom container.",
      "isGlobal": false
    },
    {
      "key": "container--top",
      "className": "MuiDataGridPremium-container--top",
      "description": "Styles applied to the top container.",
      "isGlobal": false
    },
    {
      "key": "detailPanel",
      "className": "MuiDataGridPremium-detailPanel",
      "description": "Styles applied to the detail panel element.",
      "isGlobal": false
    },
    {
      "key": "detailPanels",
      "className": "MuiDataGridPremium-detailPanels",
      "description": "Styles applied to the detail panels wrapper element.",
      "isGlobal": false
    },
    {
      "key": "detailPanelToggleCell",
      "className": "MuiDataGridPremium-detailPanelToggleCell",
      "description": "Styles applied to the detail panel toggle cell element.",
      "isGlobal": false
    },
    {
      "key": "detailPanelToggleCell--expanded",
      "className": "MuiDataGridPremium-detailPanelToggleCell--expanded",
      "description": "Styles applied to the detail panel toggle cell element if expanded.",
      "isGlobal": false
    },
    {
      "key": "editBooleanCell",
      "className": "MuiDataGridPremium-editBooleanCell",
      "description": "Styles applied to root of the boolean edit component.",
      "isGlobal": false
    },
    {
      "key": "editInputCell",
      "className": "MuiDataGridPremium-editInputCell",
      "description": "Styles applied to the root of the input component.",
      "isGlobal": false
    },
    {
      "key": "filler",
      "className": "MuiDataGridPremium-filler",
      "description": "Styles applied to the filler row.",
      "isGlobal": false
    },
    {
      "key": "filler--pinnedLeft",
      "className": "MuiDataGridPremium-filler--pinnedLeft",
      "description": "Styles applied to the filler row pinned left section.",
      "isGlobal": false
    },
    {
      "key": "filler--pinnedRight",
      "className": "MuiDataGridPremium-filler--pinnedRight",
      "description": "Styles applied to the filler row pinned right section.",
      "isGlobal": false
    },
    {
      "key": "filterForm",
      "className": "MuiDataGridPremium-filterForm",
      "description": "Styles applied to the root of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormColumnInput",
      "className": "MuiDataGridPremium-filterFormColumnInput",
      "description": "Styles applied to the column input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormDeleteIcon",
      "className": "MuiDataGridPremium-filterFormDeleteIcon",
      "description": "Styles applied to the delete icon of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormLogicOperatorInput",
      "className": "MuiDataGridPremium-filterFormLogicOperatorInput",
      "description": "Styles applied to the link operator input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormOperatorInput",
      "className": "MuiDataGridPremium-filterFormOperatorInput",
      "description": "Styles applied to the operator input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterFormValueInput",
      "className": "MuiDataGridPremium-filterFormValueInput",
      "description": "Styles applied to the value input of the filter form component.",
      "isGlobal": false
    },
    {
      "key": "filterIcon",
      "className": "MuiDataGridPremium-filterIcon",
      "description": "Styles applied to the filter icon element.",
      "isGlobal": false
    },
    {
      "key": "footerCell",
      "className": "MuiDataGridPremium-footerCell",
      "description": "Styles applied to the root element of the cell inside a footer row.",
      "isGlobal": false
    },
    {
      "key": "footerContainer",
      "className": "MuiDataGridPremium-footerContainer",
      "description": "Styles applied to the footer container element.",
      "isGlobal": false
    },
    {
      "key": "groupingCriteriaCell",
      "className": "MuiDataGridPremium-groupingCriteriaCell",
      "description": "Styles applied to the root element of the grouping criteria cell",
      "isGlobal": false
    },
    {
      "key": "groupingCriteriaCellToggle",
      "className": "MuiDataGridPremium-groupingCriteriaCellToggle",
      "description": "Styles applied to the toggle of the grouping criteria cell",
      "isGlobal": false
    },
    {
      "key": "headerFilterRow",
      "className": "MuiDataGridPremium-headerFilterRow",
      "description": "Styles applied to the column header filter row.",
      "isGlobal": false
    },
    {
      "key": "iconButtonContainer",
      "className": "MuiDataGridPremium-iconButtonContainer",
      "description": "Styles applied to the column header icon's container.",
      "isGlobal": false
    },
    {
      "key": "iconSeparator",
      "className": "MuiDataGridPremium-iconSeparator",
      "description": "Styles applied to the column header separator icon element.",
      "isGlobal": false
    },
    {
      "key": "main",
      "className": "MuiDataGridPremium-main",
      "description": "Styles applied to the main container element.",
      "isGlobal": false
    },
    {
      "key": "main--hasPinnedRight",
      "className": "MuiDataGridPremium-main--hasPinnedRight",
      "description": "Styles applied to the main container element when it has right pinned columns.",
      "isGlobal": false
    },
    {
      "key": "menu",
      "className": "MuiDataGridPremium-menu",
      "description": "Styles applied to the menu element.",
      "isGlobal": false
    },
    {
      "key": "menuIcon",
      "className": "MuiDataGridPremium-menuIcon",
      "description": "Styles applied to the menu icon element.",
      "isGlobal": false
    },
    {
      "key": "menuIconButton",
      "className": "MuiDataGridPremium-menuIconButton",
      "description": "Styles applied to the menu icon button element.",
      "isGlobal": false
    },
    {
      "key": "menuList",
      "className": "MuiDataGridPremium-menuList",
      "description": "Styles applied to the menu list element.",
      "isGlobal": false
    },
    {
      "key": "menuOpen",
      "className": "MuiDataGridPremium-menuOpen",
      "description": "Styles applied to the menu icon element if the menu is open.",
      "isGlobal": false
    },
    {
      "key": "overlay",
      "className": "MuiDataGridPremium-overlay",
      "description": "Styles applied to the overlay element.",
      "isGlobal": false
    },
    {
      "key": "overlayWrapper",
      "className": "MuiDataGridPremium-overlayWrapper",
      "description": "Styles applied to the overlay wrapper element.",
      "isGlobal": false
    },
    {
      "key": "overlayWrapperInner",
      "className": "MuiDataGridPremium-overlayWrapperInner",
      "description": "Styles applied to the overlay wrapper inner element.",
      "isGlobal": false
    },
    {
      "key": "panel",
      "className": "MuiDataGridPremium-panel",
      "description": "Styles applied to the panel element.",
      "isGlobal": false
    },
    {
      "key": "panelContent",
      "className": "MuiDataGridPremium-panelContent",
      "description": "Styles applied to the panel content element.",
      "isGlobal": false
    },
    {
      "key": "panelFooter",
      "className": "MuiDataGridPremium-panelFooter",
      "description": "Styles applied to the panel footer element.",
      "isGlobal": false
    },
    {
      "key": "panelHeader",
      "className": "MuiDataGridPremium-panelHeader",
      "description": "Styles applied to the panel header element.",
      "isGlobal": false
    },
    {
      "key": "panelWrapper",
      "className": "MuiDataGridPremium-panelWrapper",
      "description": "Styles applied to the panel wrapper element.",
      "isGlobal": false
    },
    {
      "key": "paper",
      "className": "MuiDataGridPremium-paper",
      "description": "Styles applied to the paper element.",
      "isGlobal": false
    },
    {
      "key": "pinnedColumnHeaders",
      "className": "MuiDataGridPremium-pinnedColumnHeaders",
      "description": "Styles applied to the pinned column headers.",
      "isGlobal": false
    },
    {
      "key": "pinnedColumnHeaders--left",
      "className": "MuiDataGridPremium-pinnedColumnHeaders--left",
      "description": "Styles applied to the left pinned column headers.",
      "isGlobal": false
    },
    {
      "key": "pinnedColumnHeaders--right",
      "className": "MuiDataGridPremium-pinnedColumnHeaders--right",
      "description": "Styles applied to the right pinned column headers.",
      "isGlobal": false
    },
    {
      "key": "pinnedColumns",
      "className": "MuiDataGridPremium-pinnedColumns",
      "description": "Styles applied to the pinned columns.",
      "isGlobal": false
    },
    {
      "key": "pinnedRows",
      "className": "MuiDataGridPremium-pinnedRows",
      "description": "Styles applied to the pinned rows container.",
      "isGlobal": false
    },
    {
      "key": "pinnedRows--bottom",
      "className": "MuiDataGridPremium-pinnedRows--bottom",
      "description": "Styles applied to the bottom pinned rows container.",
      "isGlobal": false
    },
    {
      "key": "pinnedRows--top",
      "className": "MuiDataGridPremium-pinnedRows--top",
      "description": "Styles applied to the top pinned rows container.",
      "isGlobal": false
    },
    {
      "key": "pinnedRowsRenderZone",
      "className": "MuiDataGridPremium-pinnedRowsRenderZone",
      "description": "Styles applied to pinned rows render zones.",
      "isGlobal": false
    },
    {
      "key": "root",
      "className": "MuiDataGridPremium-root",
      "description": "Styles applied to the root element.",
      "isGlobal": false
    },
    {
      "key": "root--densityComfortable",
      "className": "MuiDataGridPremium-root--densityComfortable",
      "description": "Styles applied to the root element if density is \"comfortable\".",
      "isGlobal": false
    },
    {
      "key": "root--densityCompact",
      "className": "MuiDataGridPremium-root--densityCompact",
      "description": "Styles applied to the root element if density is \"compact\".",
      "isGlobal": false
    },
    {
      "key": "root--densityStandard",
      "className": "MuiDataGridPremium-root--densityStandard",
      "description": "Styles applied to the root element if density is \"standard\" (default).",
      "isGlobal": false
    },
    {
      "key": "root--disableUserSelection",
      "className": "MuiDataGridPremium-root--disableUserSelection",
      "description": "Styles applied to the root element when user selection is disabled.",
      "isGlobal": false
    },
    {
      "key": "row",
      "className": "MuiDataGridPremium-row",
      "description": "Styles applied to the row element.",
      "isGlobal": false
    },
    {
      "key": "row--detailPanelExpanded",
      "className": "MuiDataGridPremium-row--detailPanelExpanded",
      "description": "Styles applied to the row if its detail panel is open.",
      "isGlobal": false
    },
    {
      "key": "row--dragging",
      "className": "MuiDataGridPremium-row--dragging",
      "description": "Styles applied to the floating special row reorder cell element when it is dragged.",
      "isGlobal": false
    },
    {
      "key": "row--dynamicHeight",
      "className": "MuiDataGridPremium-row--dynamicHeight",
      "description": "Styles applied to the row if it has dynamic row height.",
      "isGlobal": false
    },
    {
      "key": "row--editable",
      "className": "MuiDataGridPremium-row--editable",
      "description": "Styles applied to the row element if the row is editable.",
      "isGlobal": false
    },
    {
      "key": "row--editing",
      "className": "MuiDataGridPremium-row--editing",
      "description": "Styles applied to the row element if the row is in edit mode.",
      "isGlobal": false
    },
    {
      "key": "row--firstVisible",
      "className": "MuiDataGridPremium-row--firstVisible",
      "description": "Styles applied to the first visible row element on every page of the grid.",
      "isGlobal": false
    },
    {
      "key": "row--lastVisible",
      "className": "MuiDataGridPremium-row--lastVisible",
      "description": "Styles applied to the last visible row element on every page of the grid.",
      "isGlobal": false
    },
    {
      "key": "rowCount",
      "className": "MuiDataGridPremium-rowCount",
      "description": "Styles applied to the footer row count element to show the total number of rows.\nOnly works when pagination is disabled.",
      "isGlobal": false
    },
    {
      "key": "rowReorderCell",
      "className": "MuiDataGridPremium-rowReorderCell",
      "description": "Styles applied to the root element of the row reorder cell",
      "isGlobal": false
    },
    {
      "key": "rowReorderCell--draggable",
      "className": "MuiDataGridPremium-rowReorderCell--draggable",
      "description": "Styles applied to the root element of the row reorder cell when dragging is allowed",
      "isGlobal": false
    },
    {
      "key": "rowReorderCellContainer",
      "className": "MuiDataGridPremium-rowReorderCellContainer",
      "description": "Styles applied to the row reorder cell container element.",
      "isGlobal": false
    },
    {
      "key": "rowReorderCellPlaceholder",
      "className": "MuiDataGridPremium-rowReorderCellPlaceholder",
      "description": "Styles applied to the row's draggable placeholder element inside the special row reorder cell.",
      "isGlobal": false
    },
    {
      "key": "scrollArea",
      "className": "MuiDataGridPremium-scrollArea",
      "description": "Styles applied to both scroll area elements.",
      "isGlobal": false
    },
    {
      "key": "scrollArea--left",
      "className": "MuiDataGridPremium-scrollArea--left",
      "description": "Styles applied to the left scroll area element.",
      "isGlobal": false
    },
    {
      "key": "scrollArea--right",
      "className": "MuiDataGridPremium-scrollArea--right",
      "description": "Styles applied to the right scroll area element.",
      "isGlobal": false
    },
    {
      "key": "scrollbar",
      "className": "MuiDataGridPremium-scrollbar",
      "description": "Styles applied to the scrollbars.",
      "isGlobal": false
    },
    {
      "key": "scrollbar--horizontal",
      "className": "MuiDataGridPremium-scrollbar--horizontal",
      "description": "Styles applied to the horizontal scrollbar.",
      "isGlobal": false
    },
    {
      "key": "scrollbar--vertical",
      "className": "MuiDataGridPremium-scrollbar--vertical",
      "description": "Styles applied to the horizontal scrollbar.",
      "isGlobal": false
    },
    {
      "key": "selectedRowCount",
      "className": "MuiDataGridPremium-selectedRowCount",
      "description": "Styles applied to the footer selected row count element.",
      "isGlobal": false
    },
    {
      "key": "sortIcon",
      "className": "MuiDataGridPremium-sortIcon",
      "description": "Styles applied to the sort icon element.",
      "isGlobal": false
    },
    {
      "key": "toolbarContainer",
      "className": "MuiDataGridPremium-toolbarContainer",
      "description": "Styles applied to the toolbar container element.",
      "isGlobal": false
    },
    {
      "key": "toolbarFilterList",
      "className": "MuiDataGridPremium-toolbarFilterList",
      "description": "Styles applied to the toolbar filter list element.",
      "isGlobal": false
    },
    {
      "key": "treeDataGroupingCell",
      "className": "MuiDataGridPremium-treeDataGroupingCell",
      "description": "Styles applied to the root of the grouping column of the tree data.",
      "isGlobal": false
    },
    {
      "key": "treeDataGroupingCellToggle",
      "className": "MuiDataGridPremium-treeDataGroupingCellToggle",
      "description": "Styles applied to the toggle of the grouping cell of the tree data.",
      "isGlobal": false
    },
    {
      "key": "virtualScroller",
      "className": "MuiDataGridPremium-virtualScroller",
      "description": "Styles applied to the virtualization container.",
      "isGlobal": false
    },
    {
      "key": "virtualScrollerContent",
      "className": "MuiDataGridPremium-virtualScrollerContent",
      "description": "Styles applied to the virtualization content.",
      "isGlobal": false
    },
    {
      "key": "virtualScrollerContent--overflowed",
      "className": "MuiDataGridPremium-virtualScrollerContent--overflowed",
      "description": "Styles applied to the virtualization content when its height is bigger than the virtualization container.",
      "isGlobal": false
    },
    {
      "key": "virtualScrollerRenderZone",
      "className": "MuiDataGridPremium-virtualScrollerRenderZone",
      "description": "Styles applied to the virtualization render zone.",
      "isGlobal": false
    },
    {
      "key": "withBorderColor",
      "className": "MuiDataGridPremium-withBorderColor",
      "description": "Styles applied to cells, column header and other elements that have border.\nSets border color only.",
      "isGlobal": false
    },
    {
      "key": "withVerticalBorder",
      "className": "MuiDataGridPremium-withVerticalBorder",
      "description": "Styles applied the grid if `showColumnVerticalBorder={true}`.",
      "isGlobal": false
    }
  ],
  "muiName": "MuiDataGridPremium",
  "forwardsRefTo": "GridRoot",
  "filename": "/packages/grid/x-data-grid-premium/src/DataGridPremium/DataGridPremium.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-data-grid/#mit-version-free-forever\">DataGrid</a></li>\n<li><a href=\"/x/react-data-grid/#pro-plan\">DataGridPro</a></li>\n<li><a href=\"/x/react-data-grid/#premium-plan\">DataGridPremium</a></li></ul>",
  "cssComponent": false
}
