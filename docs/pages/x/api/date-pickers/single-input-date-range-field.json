{
  "props": {
    "autoFocus": { "type": { "name": "bool" } },
    "clearable": { "type": { "name": "bool" } },
    "color": {
      "type": {
        "name": "enum",
        "description": "'error'<br>&#124;&nbsp;'info'<br>&#124;&nbsp;'primary'<br>&#124;&nbsp;'secondary'<br>&#124;&nbsp;'success'<br>&#124;&nbsp;'warning'"
      },
      "default": "'primary'"
    },
    "defaultValue": { "type": { "name": "arrayOf", "description": "Array&lt;any&gt;" } },
    "disabled": { "type": { "name": "bool" } },
    "disableFuture": { "type": { "name": "bool" } },
    "disablePast": { "type": { "name": "bool" } },
    "focused": { "type": { "name": "bool" } },
    "format": { "type": { "name": "string" } },
    "formatDensity": {
      "type": { "name": "enum", "description": "'dense'<br>&#124;&nbsp;'spacious'" },
      "default": "\"dense\""
    },
    "FormHelperTextProps": { "type": { "name": "object" } },
    "fullWidth": { "type": { "name": "bool" } },
    "helperText": { "type": { "name": "node" } },
    "hiddenLabel": { "type": { "name": "bool" } },
    "id": { "type": { "name": "string" } },
    "InputLabelProps": { "type": { "name": "object" } },
    "inputProps": { "type": { "name": "object" } },
    "InputProps": { "type": { "name": "object" } },
    "inputRef": { "type": { "name": "custom", "description": "ref" } },
    "label": { "type": { "name": "node" } },
    "margin": {
      "type": {
        "name": "enum",
        "description": "'dense'<br>&#124;&nbsp;'none'<br>&#124;&nbsp;'normal'"
      },
      "default": "'none'"
    },
    "maxDate": { "type": { "name": "any" } },
    "minDate": { "type": { "name": "any" } },
    "name": { "type": { "name": "string" } },
    "onChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(value: TValue, context: FieldChangeHandlerContext<TError>) => void",
        "describedArgs": ["value", "context"]
      }
    },
    "onClear": { "type": { "name": "func" } },
    "onError": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(error: TError, value: TValue) => void",
        "describedArgs": ["error", "value"]
      }
    },
    "onSelectedSectionsChange": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(newValue: FieldSelectedSections) => void",
        "describedArgs": ["newValue"]
      }
    },
    "readOnly": { "type": { "name": "bool" } },
    "referenceDate": {
      "type": { "name": "any" },
      "default": "The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used."
    },
    "required": { "type": { "name": "bool" } },
    "selectedSections": {
      "type": {
        "name": "union",
        "description": "'all'<br>&#124;&nbsp;'day'<br>&#124;&nbsp;'hours'<br>&#124;&nbsp;'meridiem'<br>&#124;&nbsp;'minutes'<br>&#124;&nbsp;'month'<br>&#124;&nbsp;'seconds'<br>&#124;&nbsp;'weekDay'<br>&#124;&nbsp;'year'<br>&#124;&nbsp;number<br>&#124;&nbsp;{ endIndex: number, startIndex: number }"
      }
    },
    "shouldDisableDate": {
      "type": { "name": "func" },
      "signature": {
        "type": "function(day: TDate, position: string) => boolean",
        "describedArgs": ["day", "position"],
        "returned": "boolean"
      }
    },
    "shouldRespectLeadingZeros": { "type": { "name": "bool" }, "default": "`false`" },
    "size": { "type": { "name": "enum", "description": "'medium'<br>&#124;&nbsp;'small'" } },
    "slotProps": { "type": { "name": "object" }, "default": "{}" },
    "slots": { "type": { "name": "object" }, "default": "{}" },
    "sx": {
      "type": {
        "name": "union",
        "description": "Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"
      },
      "additionalInfo": { "sx": true }
    },
    "timezone": {
      "type": { "name": "string" },
      "default": "The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise."
    },
    "unstableFieldRef": {
      "type": { "name": "union", "description": "func<br>&#124;&nbsp;object" }
    },
    "value": { "type": { "name": "arrayOf", "description": "Array&lt;any&gt;" } },
    "variant": {
      "type": {
        "name": "enum",
        "description": "'filled'<br>&#124;&nbsp;'outlined'<br>&#124;&nbsp;'standard'"
      },
      "default": "'outlined'"
    }
  },
  "slots": [
    {
      "class": null,
      "name": "clearButton",
      "description": "Button to clear the value.",
      "default": "IconButton"
    },
    {
      "class": null,
      "name": "clearIcon",
      "description": "Icon to display inside the clear button.",
      "default": "ClearIcon"
    },
    {
      "class": null,
      "name": "textField",
      "description": "Form control with an input to render the value. Receives the same props as <code>@mui/material/TextField</code>.",
      "default": "TextField from '@mui/material'"
    }
  ],
  "name": "SingleInputDateRangeField",
  "imports": [
    "import { SingleInputDateRangeField } from '@mui/x-date-pickers-pro/SingleInputDateRangeField';",
    "import { SingleInputDateRangeField } from '@mui/x-date-pickers-pro';"
  ],
  "styles": { "classes": ["root"], "globalClasses": {}, "name": "MuiSingleInputDateRangeField" },
  "spread": true,
  "forwardsRefTo": "HTMLDivElement",
  "filename": "/packages/x-date-pickers-pro/src/SingleInputDateRangeField/SingleInputDateRangeField.tsx",
  "inheritance": null,
  "demos": "<ul><li><a href=\"/x/react-date-pickers/date-range-field/\">Date Range Field <span class=\"plan-pro\"></span></a></li>\n<li><a href=\"/x/react-date-pickers/fields/\">Fields component</a></li></ul>"
}
