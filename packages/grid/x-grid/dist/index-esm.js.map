{"version":3,"file":"index-esm.js","sources":["../src/gridProps.ts","../src/components/watermark.tsx","../src/grid.tsx"],"sourcesContent":["// This is the grid release date\n// each grid version should update this const automatically when a new version of the grid is published to NPM\nimport { LicenseInfo } from '@material-ui/x-license';\nimport { Columns, GridApiRef, GridChildrenProp, GridOptions, RowsProp } from '@material-ui/x-grid-modules';\n\nconst RELEASE_INFO = '__RELEASE_INFO__';\nexport const version = '__VERSION__';\nLicenseInfo.setReleaseInfo(RELEASE_INFO);\n\nexport type GridOptionsProp = Partial<GridOptions>;\n\nexport interface GridProps {\n  rows: RowsProp;\n  columns: Columns;\n  options?: GridOptionsProp;\n  apiRef?: GridApiRef;\n  loading?: boolean;\n  children?: GridChildrenProp;\n}\n","import React from 'react';\nimport { LicenseStatus } from '@material-ui/x-license';\n\nexport interface WatermarkProps {\n  licenseStatus: LicenseStatus;\n}\n\nfunction getLicenseErrorMessage(licenseStatus: LicenseStatus) {\n  switch (licenseStatus) {\n    case LicenseStatus.Expired:\n      return 'Material-UI X License Expired';\n    case LicenseStatus.Invalid:\n      return 'Material-UI X Invalid License';\n    case LicenseStatus.NotFound:\n      return 'Material-UI X Unlicensed product';\n    default:\n      return '';\n  }\n}\n\nexport const Watermark: React.FC<WatermarkProps> = ({ licenseStatus }) => {\n  if (licenseStatus === LicenseStatus.Valid) {\n    return null;\n  }\n\n  return <div className={'watermark'}> {getLicenseErrorMessage(licenseStatus)} </div>;\n};\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { ColumnsContainer, DataContainer, GridRoot, Window } from '@material-ui/x-grid-modules';\nimport {\n  AutoSizerWrapper,\n  ColumnsHeader,\n  Viewport,\n  RenderContext,\n  LoadingOverlay,\n  NoRowMessage,\n  ApiContext,\n  OptionsContext,\n  DefaultFooter,\n} from '@material-ui/x-grid-modules';\nimport {\n  useColumns,\n  useLogger,\n  useApi,\n  useLoggerFactory,\n  useRows,\n  useVirtualRows,\n  useColumnResize,\n  useSelection,\n  usePagination,\n  useChildren,\n  useSorting,\n  useKeyboard,\n} from '@material-ui/x-grid-modules';\nimport { DEFAULT_GRID_OPTIONS, ElementSize, GridOptions, GridApi } from '@material-ui/x-grid-modules';\nimport { debounce, mergeOptions } from '@material-ui/x-grid-modules';\nimport { DATA_CONTAINER_CSS_CLASS } from '@material-ui/x-grid-modules';\nimport { useLicenseVerifier } from '@material-ui/x-license';\nimport { GridRootRef } from '@material-ui/x-grid-modules';\nimport { GridProps } from './gridProps';\nimport { Watermark } from './components/watermark';\n\nexport const Grid: React.FC<GridProps> = React.memo(({ rows, columns, options, apiRef, loading, children }) => {\n  useLoggerFactory(options?.logger, options?.logLevel);\n  const licenseStatus = useLicenseVerifier();\n  const logger = useLogger('Grid');\n  const gridRootRef: GridRootRef = useRef<HTMLDivElement>(null);\n  const columnsHeaderRef = useRef<HTMLDivElement>(null);\n  const columnsContainerRef = useRef<HTMLDivElement>(null);\n  const windowRef = useRef<HTMLDivElement>(null);\n  const gridRef = useRef<HTMLDivElement>(null);\n  const renderingZoneRef = useRef<HTMLDivElement>(null);\n  const internalApiRef = useRef<GridApi | null | undefined>();\n\n  const [internalOptions, setInternalOptions] = useState<GridOptions>(mergeOptions(DEFAULT_GRID_OPTIONS, options));\n  useEffect(() => {\n    setInternalOptions(previousState => mergeOptions(previousState, options));\n  }, [options]);\n\n  if (!apiRef) {\n    apiRef = internalApiRef;\n  }\n\n  const initialised = useApi(gridRootRef, windowRef, internalOptions, apiRef);\n  const internalColumns = useColumns(internalOptions, columns, apiRef);\n  const internalRows = useRows(internalOptions, rows, initialised, apiRef);\n  useKeyboard(internalOptions, initialised, apiRef);\n  useSelection(internalOptions, rows, initialised, apiRef);\n  useSorting(internalOptions, rows, columns, apiRef);\n\n  const renderCtx = useVirtualRows(\n    columnsHeaderRef,\n    windowRef,\n    renderingZoneRef,\n    internalColumns,\n    internalRows,\n    internalOptions,\n    apiRef,\n  );\n\n  const onResizeColumn = useColumnResize(columnsHeaderRef, apiRef, internalOptions.headerHeight);\n  const paginationProps = usePagination(internalRows, internalColumns, internalOptions, apiRef);\n\n  useEffect(() => {\n    setInternalOptions(previousState => {\n      if (previousState.paginationPageSize !== paginationProps.pageSize) {\n        return { ...previousState, paginationPageSize: paginationProps.pageSize };\n      }\n      return previousState;\n    });\n  }, [paginationProps.pageSize, setInternalOptions]);\n\n  const [footerChildNode, headerChildNode] = useChildren(\n    internalColumns,\n    internalRows,\n    internalOptions,\n    paginationProps,\n    apiRef,\n    gridRootRef,\n    children,\n  );\n\n  const onResize = useCallback(\n    (size: ElementSize) => {\n      logger.info('resized...', size);\n      if (apiRef && apiRef.current) {\n        apiRef.current.resize();\n      }\n    },\n    [logger, apiRef],\n  );\n  const debouncedOnResize = useMemo(() => debounce(onResize, 100), [onResize]) as any;\n\n  useEffect(() => {\n    return () => {\n      logger.info('canceling resize...');\n      debouncedOnResize.cancel();\n    };\n  }, [logger, debouncedOnResize]);\n\n  logger.info(\n    `Rendering, page: ${renderCtx?.page}, col: ${renderCtx?.firstColIdx}-${renderCtx?.lastColIdx}, row: ${renderCtx?.firstRowIdx}-${renderCtx?.lastRowIdx}`,\n    renderCtx,\n  );\n\n  const loadingComponent = useMemo(\n    () => (internalOptions.loadingOverlayComponent ? internalOptions.loadingOverlayComponent : <LoadingOverlay />),\n    [internalOptions.loadingOverlayComponent],\n  );\n  const noRowsComponent = useMemo(\n    () => (internalOptions.noRowsOverlayComponent ? internalOptions.noRowsOverlayComponent : <NoRowMessage />),\n    [internalOptions.noRowsOverlayComponent],\n  );\n\n  return (\n    <AutoSizerWrapper onResize={debouncedOnResize}>\n      {(size: any) => (\n        <GridRoot\n          ref={gridRootRef}\n          options={internalOptions}\n          style={{ width: size.width, height: size.height }}\n          role={'grid'}\n          aria-colcount={internalColumns.visible.length}\n          aria-rowcount={internalRows.length + 1}\n          tabIndex={0}\n          aria-label={'Grid'}\n          aria-multiselectable={internalOptions.enableMultipleSelection}\n        >\n          <ApiContext.Provider value={apiRef}>\n            <OptionsContext.Provider value={internalOptions}>\n              {headerChildNode}\n              <div className={'main-grid-container'}>\n                <Watermark licenseStatus={licenseStatus} />\n                <ColumnsContainer ref={columnsContainerRef}>\n                  <ColumnsHeader\n                    ref={columnsHeaderRef}\n                    columns={internalColumns.visible || []}\n                    hasScrollX={!!renderCtx?.hasScrollX}\n                    headerHeight={internalOptions.headerHeight}\n                    onResizeColumn={onResizeColumn}\n                    renderCtx={renderCtx}\n                  />\n                </ColumnsContainer>\n                {!loading && internalRows.length === 0 && noRowsComponent}\n                {loading && loadingComponent}\n                <Window ref={windowRef}>\n                  <DataContainer\n                    ref={gridRef}\n                    className={DATA_CONTAINER_CSS_CLASS}\n                    style={{\n                      minHeight: renderCtx?.dataContainerSizes?.height,\n                      minWidth: renderCtx?.dataContainerSizes?.width,\n                    }}\n                  >\n                    {renderCtx != null && (\n                      <RenderContext.Provider value={renderCtx}>\n                        <Viewport\n                          ref={renderingZoneRef}\n                          options={internalOptions}\n                          rows={internalRows}\n                          visibleColumns={internalColumns.visible}\n                        />\n                      </RenderContext.Provider>\n                    )}\n                  </DataContainer>\n                </Window>\n              </div>\n              <DefaultFooter\n                paginationProps={paginationProps}\n                rowCount={internalRows.length}\n                options={internalOptions}\n              />\n              {footerChildNode}\n            </OptionsContext.Provider>\n          </ApiContext.Provider>\n        </GridRoot>\n      )}\n    </AutoSizerWrapper>\n  );\n});\n\nGrid.displayName = 'Grid';\n"],"names":["version","LicenseInfo","setReleaseInfo","Watermark","licenseStatus","LicenseStatus","Valid","React","className","Expired","Invalid","NotFound","getLicenseErrorMessage","Grid","memo","rows","columns","options","apiRef","loading","children","useLoggerFactory","logger","logLevel","useLicenseVerifier","useLogger","gridRootRef","useRef","columnsHeaderRef","columnsContainerRef","windowRef","gridRef","renderingZoneRef","internalApiRef","internalOptions","setInternalOptions","useState","mergeOptions","DEFAULT_GRID_OPTIONS","useEffect","previousState","initialised","useApi","internalColumns","useColumns","internalRows","useRows","useKeyboard","useSelection","useSorting","renderCtx","useVirtualRows","onResizeColumn","useColumnResize","headerHeight","paginationProps","usePagination","paginationPageSize","pageSize","footerChildNode","headerChildNode","useChildren","onResize","useCallback","size","info","current","resize","debouncedOnResize","useMemo","debounce","cancel","page","firstColIdx","lastColIdx","firstRowIdx","lastRowIdx","loadingComponent","loadingOverlayComponent","LoadingOverlay","noRowsComponent","noRowsOverlayComponent","NoRowMessage","AutoSizerWrapper","GridRoot","ref","style","width","height","role","visible","length","tabIndex","enableMultipleSelection","ApiContext","Provider","value","OptionsContext","ColumnsContainer","ColumnsHeader","hasScrollX","Window","DataContainer","DATA_CONTAINER_CSS_CLASS","minHeight","dataContainerSizes","minWidth","RenderContext","Viewport","visibleColumns","DefaultFooter","rowCount","displayName"],"mappings":"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"}